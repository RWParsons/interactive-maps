[["index.html", "Interactive maps with leaflet Chapter 1 Prerequisites", " Interactive maps with leaflet Rex Parsons 2022-05-22 Chapter 1 Prerequisites This book is intended as a non-comprehensive guide to developing interactive maps with leaflet and shiny. This is by no means comprehensive as it is based on methods that were used in developing theiTRAQI shiny app. However, since this book does focus on the applied problem of developing the iTRAQI shiny app, it includes specific help and methods for these are described here that may be otherwise difficult to find. For a more comprehensive introduction to leaflet, see the leaflet documentation. For a more comprehensive introduction to shiny, see the Mastering Shiny book "],["intro.html", "Chapter 2 Introduction 2.1 leaflet layers", " Chapter 2 Introduction This book focuses on using leaflet and shiny together to make interactive maps. Heres a simple leaflet map. library(leaflet) leaflet() %&gt;% addTiles() %&gt;% # Add default OpenStreetMap map tiles addMarkers(lng=174.768, lat=-36.852, popup=&quot;The birthplace of R&quot;) Figure 2.1: Simple leaflet map Before we begin adding to this map, we need to create the layers that we want to add. In the iTRAQI app, we used markers, rasters and polygons to show the key locations and interpolations. See the iTRAQI shiny app here and read more about it in the information tab of the app. Chapter 3 will focus on these first steps, before making any maps or interactivity. If youre already well-versed in making these layers and the sf R package, you can skip to the latter chapters. 2.1 leaflet layers To display statistical area level 1 and 2 (SA1 and SA2) regions on the map, we will be using sf objects with MULTIPOLYGON geometries. These are multipolygons because some of these areas include distinct areas, such as a set of islands, that arent contained within a single polygon. To display the location of acute and rehab centers and town locations with travel times that we used for interpolations, we used (spatial) data.frames that had longitudes and latitudes for their location. To display the continuous interpolations, we used RasterLayer objects. Using a polygon and raster layer thats used in the iTRAQI map and some markers in a data.frame, we can make see the basic approach that we use to display these on a leaflet map. First, lets make a data.frame with the coordinates for the Princess Alexandra and Townsville University Hospitals, and download a raster and polygon layer from the iTRAQI app GitHub repository. library(tidyverse) library(sf) download_layer &lt;- function(layer_name, save_dir=&quot;input&quot;) { githubURL &lt;- glue::glue(&quot;https://raw.githubusercontent.com/RWParsons/iTRAQI_app/main/input/layers/{layer_name}&quot;) download.file(githubURL, file.path(save_dir, layer_name), method=&quot;curl&quot;) readRDS(file.path(save_dir, layer_name)) } raster_layer &lt;- download_layer(&quot;rehab_raster.rds&quot;) %&gt;% raster::raster(., layer=1) polygons_layer &lt;- download_layer(&quot;stacked_SA1_and_SA2_polygons_year2016_simplified.rds&quot;) polygons_layer &lt;- polygons_layer[polygons_layer$SA_level==2, ] # show SA2 regions for example marker_locations &lt;- data.frame( centre_name=c(&quot;Princess Alexandra Hospital (PAH)&quot;, &quot;Townsville University Hospital&quot;), x=c(153.033519, 146.762041), y=c(-27.497374, -19.320502) ) Here, in figure 2.2, we make a leaflet map with the three object types. We will use these three functions, addPolygons(), addRasterImage(), and addMarkers() to add almost all of the content to our leaflet maps. leaflet() %&gt;% addProviderTiles(&quot;CartoDB.VoyagerNoLabels&quot;) %&gt;% # add a simple base map addPolygons( data=polygons_layer, fillColor=&quot;Orange&quot;, color=&quot;black&quot;, weight=1, group=&quot;Polygons&quot; ) %&gt;% addRasterImage( x=raster_layer, colors=&quot;YlOrRd&quot;, group=&quot;Raster&quot; ) %&gt;% addMarkers( lng=marker_locations$x, lat=marker_locations$y, label=marker_locations$centre_name, group=&quot;Points&quot; ) %&gt;% addLayersControl( position=&quot;topright&quot;, baseGroups=c(&quot;Polygons&quot;, &quot;Raster&quot;, &quot;Points&quot;), options=layersControlOptions(collapsed = FALSE) ) Figure 2.2: leaflet map with polygons, rasters and markers Almost all of these objects were made before being used in the shiny app. Chapter 3 will introduce the methods used to make them. Chapter 4 will introduce the basics of a shiny app. Chapter 5 will introduce the more specific methods that were used to construct the iTRAQI app itself. "],["building.html", "Chapter 3 Creating the layers", " Chapter 3 Creating the layers This chapter will cover the necessary steps to make layers which will be visualised in the app: kriging spatial joins aggregating interpolations within polygons "],["shiny-intro.html", "Chapter 4 An app with a map", " Chapter 4 An app with a map This chapter will have a brief intro to shiny with a map: ui and server reactivity leaflet leafletproxy "],["shiny-methods.html", "Chapter 5 An app with a map", " Chapter 5 An app with a map This chapter will have a brief intro to shiny with a map: ui and server reactivity leaflet leafletproxy "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
