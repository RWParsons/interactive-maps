[{"path":"index.html","id":"prerequisites","chapter":"1 Prerequisites","heading":"1 Prerequisites","text":"book intended non-comprehensive guide developing interactive maps leaflet shiny. means comprehensive based methods used developing theiTRAQI shiny app. However, since book focus applied problem developing iTRAQI shiny app, includes specific help methods described may otherwise difficult find.comprehensive introduction leaflet, see \nleaflet documentation.comprehensive introduction shiny, see \nMastering Shiny book","code":""},{"path":"intro.html","id":"intro","chapter":"2 Introduction","heading":"2 Introduction","text":"book focuses using leaflet shiny together make interactive maps.’s simple leaflet map.\nFigure 2.1: Simple leaflet map\nbegin adding map, need create layers want add.iTRAQI app, used markers, rasters polygons show key locations interpolations.See iTRAQI shiny app read information tab app.Chapter 3 focus first steps, making maps interactivity. ’re already well-versed making layers sf R package, can skip latter chapters.","code":"\nlibrary(leaflet)\n\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=174.768, lat=-36.852, popup=\"The birthplace of R\")"},{"path":"intro.html","id":"leaflet-layers","chapter":"2 Introduction","heading":"2.1 leaflet layers","text":"display statistical area level 1 2 (SA1 SA2) regions map, using sf objects MULTIPOLYGON geometries. multipolygons areas include distinct areas, set islands, aren’t contained within single polygon.display statistical area level 1 2 (SA1 SA2) regions map, using sf objects MULTIPOLYGON geometries. multipolygons areas include distinct areas, set islands, aren’t contained within single polygon.display location acute rehab centers town locations travel times used interpolations, used (spatial) data.frames longitudes latitudes location.display location acute rehab centers town locations travel times used interpolations, used (spatial) data.frames longitudes latitudes location.display continuous interpolations, used RasterLayer objects.display continuous interpolations, used RasterLayer objects.Using polygon raster layer ’s used iTRAQI map markers data.frame, can make see basic approach use display leaflet map.First, lets make data.frame coordinates Princess Alexandra Townsville University Hospitals, download raster polygon layer iTRAQI app GitHub repository., figure 2.2, make leaflet map three object types. use three functions, addPolygons(), addRasterImage(), addMarkers() add almost content leaflet maps.\nFigure 2.2: leaflet map polygons, rasters markers\nAlmost objects made used shiny app. Chapter 3 introduce methods used make . Chapter 4 introduce basics shiny app. Chapter 5 introduce specific methods used construct iTRAQI app .","code":"\nlibrary(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.1 --## v ggplot2 3.3.6     v purrr   0.3.4\n## v tibble  3.1.2     v dplyr   1.0.6\n## v tidyr   1.1.3     v stringr 1.4.0\n## v readr   2.1.2     v forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n## x dplyr::filter() masks stats::filter()\n## x dplyr::lag()    masks stats::lag()\nlibrary(sf)## Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1; sf_use_s2() is TRUE\ndownload_layer <- function(layer_name, save_dir=\"input\") {\n  githubURL <- glue::glue(\"https://raw.githubusercontent.com/RWParsons/iTRAQI_app/main/input/layers/{layer_name}\")\n  download.file(githubURL, file.path(save_dir, layer_name), method=\"curl\")\n  readRDS(file.path(save_dir, layer_name))\n}\n\nraster_layer <- download_layer(\"rehab_raster.rds\") %>%\n  raster::raster(., layer=1)\n\npolygons_layer <- download_layer(\"stacked_SA1_and_SA2_polygons_year2016_simplified.rds\")\npolygons_layer <- polygons_layer[polygons_layer$SA_level==2, ] # show SA2 regions for example\n\nmarker_locations <- data.frame(\n  centre_name=c(\"Princess Alexandra Hospital (PAH)\", \"Townsville University Hospital\"),\n  x=c(153.033519, 146.762041),\n  y=c(-27.497374, -19.320502)\n)\nleaflet() %>%\n  addProviderTiles(\"CartoDB.VoyagerNoLabels\") %>% # add a simple base map\n  addPolygons(\n    data=polygons_layer,\n    fillColor=\"Orange\",\n    color=\"black\",\n    weight=1,\n    group=\"Polygons\"\n  ) %>%\n  addRasterImage(\n    x=raster_layer,\n    colors=\"YlOrRd\",\n    group=\"Raster\"\n  ) %>%\n  addMarkers(\n    lng=marker_locations$x, \n    lat=marker_locations$y,\n    label=marker_locations$centre_name,\n    group=\"Points\"\n  ) %>%\n  addLayersControl(\n    position=\"topright\",\n    baseGroups=c(\"Polygons\", \"Raster\", \"Points\"),\n    options=layersControlOptions(collapsed = FALSE)\n  ) "},{"path":"building.html","id":"building","chapter":"3 Creating the layers","heading":"3 Creating the layers","text":"chapter cover necessary steps make layers visualised app:krigingspatial joinsaggregating interpolations within polygons","code":""},{"path":"shiny-intro.html","id":"shiny-intro","chapter":"4 An app with a map","heading":"4 An app with a map","text":"chapter brief intro shiny map:ui serverreactivityleafletleafletproxy","code":""},{"path":"shiny-methods.html","id":"shiny-methods","chapter":"5 An app with a map","heading":"5 An app with a map","text":"chapter brief intro shiny map:ui serverreactivityleafletleafletproxy","code":""}]
